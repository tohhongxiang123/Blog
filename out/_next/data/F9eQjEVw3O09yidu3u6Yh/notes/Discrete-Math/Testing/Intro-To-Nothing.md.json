{"pageProps":{"source":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Hello world\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1>Hello world</h1><ul><li>1</li><li>2</li><li>3</li></ul>","scope":{"title":" Hello world\r"}},"frontMatter":{"title":" Hello world\r"},"notesStructure":[{"name":"Discrete-Math","path":"notes\\Discrete-Math","children":[{"name":"Graph-Theory","path":"notes\\Discrete-Math\\Graph-Theory.md","children":[]},{"name":"Set-Theory","path":"notes\\Discrete-Math\\Set-Theory.md","children":[]},{"name":"Testing","path":"notes\\Discrete-Math\\Testing","children":[{"name":"Intro-To-Nothing","path":"notes\\Discrete-Math\\Testing\\Intro-To-Nothing.md","children":[]}]}]},{"name":"Ha","path":"notes\\Ha.md","children":[]},{"name":"Introduction-to-Computational-Thinking","path":"notes\\Introduction-to-Computational-Thinking","children":[{"name":"Functions","path":"notes\\Introduction-to-Computational-Thinking\\Functions.mdx","children":[]},{"name":"Pointers","path":"notes\\Introduction-to-Computational-Thinking\\Pointers.md","children":[]}]},{"name":"Testing Spaces","path":"notes\\Testing Spaces","children":[{"name":"Part 2","path":"notes\\Testing Spaces\\Part 2","children":[{"name":"Anotehrr file","path":"notes\\Testing Spaces\\Part 2\\Anotehrr file.md","children":[]},{"name":"There is no war","path":"notes\\Testing Spaces\\Part 2\\There is no war","children":[{"name":"In Ba Sing Seh","path":"notes\\Testing Spaces\\Part 2\\There is no war\\In Ba Sing Seh.md","children":[]}]}]},{"name":"This is a spacey file","path":"notes\\Testing Spaces\\This is a spacey file.md","children":[]}]}]},"__N_SSG":true}